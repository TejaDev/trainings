- implementacje python, pypy, jython
- working environment, virtual env, IDE

- basic syntax, reserwed keywords
- numbers, strings
- pliki + with + errors handling
- local vs global
- modules
- subprocess

- web scraping z requests, urrlib, pokazac autoryzje w urrlib


ZADANIA

1. liczby: dzialania matematyczne, prosty wielomian z + * nawiasy - pod x, y podstawic liczby - test sprawdzajacy
2. listy: 
- Lista A: wygeneruj liste od 0 do 100, podpowiedz: range, help(range)
- Lista B: tylko parzyste liczby
- Lista C: lista posortowana malejaco
- Lista D: wszystkie liczby z listy B podniesione do potegi 2
- Lista E: liczby od 20 do 60 z listy A
- Lista F: liczby od 100 do 70
- Lista G: suma list E i F
- Lista H: do Listy G dodaj liczbe 1000
- Lista I - kopia listy H
- Lista J - z listy H usun najmniejsza liczbe

- zmienna v1: suma liczb z listy B
- zmienna v2: maksymalna liczba z listy H
- zmienna v3: minimalna liczba z listy H
- zmienna v4: srednia liczba z listy G

3. 
Lista A: z pliku data.dat wczytaj wszystkie dane do listy A
lista B:  unikatowe dane z Listy A - niepowatrzajace sie
Lista C: posrtowane dane z listy B
- zapisz dane z listy C do pliku data_unique.data

Funkcje
4. z *args, funkcja zwraca sume liczb podanych jako parametr
5. VAT: 
Create a function “vat_price_calculator” that calculates the total price of a product. The formula for calculating the price is : price+price*vat%. The function will receive the price as parameter. VAT will be a global variable.  
Call the function from interactive mode. What happens? 
Configure variable vat with value 0.24. Re-run the function. What happens? 
Change variable vat to 0.19.  Run the function. 


- odwracanie zdan podanych jako argument funkcji, reverse words
 

Modules

5. z zadania 4 importuj funkcje vat_price_calculator 

Pliki
6. Zapisz do pliku tekst import this
Wypisz pierwsze i ostatnie zdanie

Subprocess:
- uruchom skrypt "script.sh" z biezacego katalogu
- output z tego skryptu zapisz do pliku out.log - wczesniej usun wszystkie linijki zaczynajace sie od "===>"


Scraping

- zainstaluj biblioteke requests
- zainstaluj biblioteka beautiful soup
- ze strony https://www.python.org/downloads/ wypisz wszystkie adresy downloads


